{"version":3,"file":"static/js/movies.e1d3bec6.chunk.js","mappings":"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","sources":["Pages/Movie/component/BackLink/BackLink.js","Pages/Movie/component/Styles/filmList.styles.js","Pages/Movie/servises/ServisTMDB.jsx","Pages/Movie/component/Styles/form.styles.js","Pages/Movie/vievs/Movies.jsx","Pages/Movie/hooks/useFetchMovies.js"],"sourcesContent":["import {useLocation,Link} from 'react-router-dom'\r\nconst BackLink = () => {\r\n    const location = useLocation();\r\n    return (\r\n<Link to={location?.state?.from ?? \"/\"}>Go back</Link>\r\n    );\r\n}\r\n\r\nexport default BackLink;","import styled from 'styled-components/'\r\nimport {Link} from 'react-router-dom'\r\nexport const Ul = styled.ul`\r\n        display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    gap: 16px;\r\n    margin: 0px auto;\r\n    padding: 0px;\r\n    list-style: none;\r\n    margin-top:25px;\r\n\r\n`;\r\nexport const Li = styled.li`\r\nmargin:10px\r\n\r\n`;\r\nexport const MovieLink = styled(Link)`\r\ntext-decoration:none;\r\nfont-weight: 500;\r\n  color: #2a363b;\r\n  text-align: center;\r\n`;\r\nexport const Img = styled.img`\r\n    display: block;\r\n    max-width: 100%;\r\n    height: auto;\r\n\r\n`;\r\nexport const Title = styled.p`\r\nfont-weight: 700;\r\n  color: #2a363b;\r\n  font-size: 16px;\r\n`;","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst API_KEY = \"cdd38ed2e1ff6ec8c3ec0bbc75d0e5fe\";\r\n\r\n  export async function popularMovies  () {\r\n\r\n     const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n\r\n    return response.data.results;\r\n\r\n}\r\n  export async function fetchMoviesDetails (id) {\r\n\r\n     const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\r\n\r\n    return response.data;\r\n\r\n}\r\nexport async function fetchMoviesCast(id) {\r\n\r\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\r\n\r\n  return response.data.cast;\r\n}\r\n\r\nexport async function fetchMoviesReviews(id) {\r\n\r\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\r\n\r\n  return response.data.results;\r\n}\r\nexport async function fetchSearchMoive(quvery) {\r\n\r\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${quvery}&include_adult=false`);\r\n\r\n  return response.data.results;\r\n}","import styled from 'styled-components/'\r\n\r\nexport const Form = styled.form`\r\ntext-align:center;\r\n`;\r\nexport const BtnSubmit = styled.input`\r\nmargin-left: 20px;\r\n    border: none;\r\n    background-color: orange;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;","import { useState} from 'react'\r\nimport { useSearchParams,useLocation } from 'react-router-dom'\r\nimport { useFetchMovies } from '../hooks/useFetchMovies'\r\n\r\nimport { Ul, Li, MovieLink, Img, Title } from '../component/Styles/filmList.styles'\r\nimport {Form,BtnSubmit} from '../component/Styles/form.styles'\r\nimport BackLink from '../component/BackLink/BackLink'\r\n\r\n\r\nconst Movies = () => {\r\n    const [form, setForm] = useState('iron man');\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const location = useLocation();\r\n    // const filmQuvery = searchParams.get('query ') || ' ';\r\n    //\r\n    const {films,error} = useFetchMovies(form);\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setForm(e.target.search.value);\r\n        setSearchParams({ query: e.target.search.value });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <BackLink/>\r\n            <Form onSubmit={handleSubmit}>\r\n                <input type=\" search\" name=\"search\" />\r\n                <BtnSubmit type=\"submit\" value=\"Search\" />\r\n            </Form>\r\n              {!error && <Ul>\r\n                {films && films.map(({ title, poster_path, id, backdrop_path }) => <Li key={id}><MovieLink to={`/movies/${id}`} state={{from:location}}>{poster_path ? (<Img src={`https://image.tmdb.org/t/p/w500/${poster_path} `} alt={title}  />) : (<Img src={`https://image.tmdb.org/t/p/w500/${backdrop_path} `} alt={title} />)}<Title>{title}</Title></MovieLink></Li>)}\r\n            </Ul>}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Movies","import { useState, useEffect } from 'react'\r\nimport { fetchSearchMoive } from '../servises/ServisTMDB'\r\nexport const useFetchMovies = (form) => {\r\n    const [films, setFilms] = useState(null);\r\n    const[error,setError]=useState(null);\r\n    useEffect(() => {\r\n        try {\r\n            if (form===null) { return };\r\n       fetchSearchMoive(form).then(setFilms)\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n\r\n    }, [form])\r\n    return {films,error};\r\n};"],"names":["location","useLocation","to","state","from","Ul","styled","Li","MovieLink","Link","Img","Title","axios","API_KEY","popularMovies","response","data","results","fetchMoviesDetails","id","fetchMoviesCast","cast","fetchMoviesReviews","fetchSearchMoive","quvery","Form","BtnSubmit","useState","form","setForm","useSearchParams","setSearchParams","films","setFilms","error","setError","useEffect","then","message","useFetchMovies","BackLink","onSubmit","e","preventDefault","target","search","value","query","type","name","map","title","poster_path","backdrop_path","src","alt"],"sourceRoot":""}