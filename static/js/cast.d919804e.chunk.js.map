{"version":3,"file":"static/js/cast.d919804e.chunk.js","mappings":"yTAEAA,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEP,SAAeC,IAAtB,4CAAO,OAAP,0BAAO,yGAEmBF,IAAAA,IAAA,qCAAwCC,IAF3D,cAEEE,EAFF,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAAmCC,GAAnC,4FAEmBP,IAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCN,EAAjC,oBAFnB,cAEEE,EAFF,yBAIEA,EAASC,MAJX,kEAOF,SAAeI,EAAtB,+CAAO,OAAP,0BAAO,WAA+BD,GAA/B,4FAEkBP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCN,EAAzC,oBAFlB,cAECE,EAFD,yBAIEA,EAASC,KAAKK,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAAkCH,GAAlC,4FAEkBP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCN,EAAzC,oBAFlB,cAECE,EAFD,yBAIEA,EAASC,KAAKC,SAJhB,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,0BAAO,WAAgCC,GAAhC,4FAEkBZ,IAAAA,IAAA,gCAAmCC,EAAnC,wCAA0EW,EAA1E,yBAFlB,cAECT,EAFD,yBAIEA,EAASC,KAAKC,SAJhB,oE,sHCjBP,EAfc,WACV,IAAMQ,ECIkB,WAC5B,OAA2BC,EAAAA,EAAAA,UAAS,MAApC,eAAQD,EAAR,KAAeE,EAAf,KACYC,GAAaC,EAAAA,EAAAA,MAAbD,SAUR,OATJE,QAAQC,IAAIN,IACRO,EAAAA,EAAAA,YAAU,WACV,KACIZ,EAAAA,EAAAA,IAAgBQ,GAAUK,KAAKN,GACjC,MAAOO,GACLJ,QAAQC,IAAIG,MAGjB,CAACN,IACOH,EDhBKU,GAEZ,OACI,+BACI,wBACKV,GAASA,EAAMW,KAAI,gBAAEC,EAAF,EAAEA,aAAalB,EAAf,EAAeA,GAAGmB,EAAlB,EAAkBA,KAAlB,OAA4B,2BAC5C,gBAAKC,IAAG,0CAAqCF,GAAgBG,IAAKF,EAAMG,MAAQ,SAChF,uBAAIH,MAFiDnB","sources":["Pages/Movie/servises/ServisTMDB.jsx","Pages/Movie/vievs/Cast.jsx","Pages/Movie/hooks/useFetchCact.js"],"sourcesContent":["import axios from 'axios'\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst API_KEY = \"cdd38ed2e1ff6ec8c3ec0bbc75d0e5fe\";\r\n\r\n  export async function popularMovies  () {\r\n\r\n     const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n\r\n    return response.data.results;\r\n\r\n}\r\n  export async function fetchMoviesDetails (id) {\r\n\r\n     const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\r\n\r\n    return response.data;\r\n\r\n}\r\nexport async function fetchMoviesCast(id) {\r\n\r\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\r\n\r\n  return response.data.cast;\r\n}\r\n\r\nexport async function fetchMoviesReviews(id) {\r\n\r\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\r\n\r\n  return response.data.results;\r\n}\r\nexport async function fetchSearchMoive(quvery) {\r\n\r\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${quvery}&include_adult=false`);\r\n\r\n  return response.data.results;\r\n}","import {useFetchCact} from '../hooks/useFetchCact'\r\n const Cast = () => {\r\n    const casts=useFetchCact()\r\n\r\n    return (\r\n        <>\r\n            <ul>\r\n                {casts && casts.map(({profile_path,id,name}) => <li key={id}>\r\n                    <img src={`https://image.tmdb.org/t/p/w500/${profile_path}`} alt={name} width = '100'/>\r\n                    <p>{name}</p></li>)}\r\n</ul>\r\n    </>\r\n\r\n    );\r\n}\r\n\r\nexport default Cast","\r\nimport {useParams} from 'react-router'\r\nimport {fetchMoviesCast} from '../servises/ServisTMDB'\r\nimport {useState,useEffect} from 'react'\r\n\r\n\r\nexport const useFetchCact = () => {\r\nconst  [casts, setCast ] = useState(null);\r\n    const { moviesId } = useParams();\r\nconsole.log(casts)\r\n    useEffect(() => {\r\n    try {\r\n        fetchMoviesCast(moviesId).then(setCast)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n}, [moviesId]);\r\n    return casts;\r\n};"],"names":["axios","API_KEY","popularMovies","response","data","results","fetchMoviesDetails","id","fetchMoviesCast","cast","fetchMoviesReviews","fetchSearchMoive","quvery","casts","useState","setCast","moviesId","useParams","console","log","useEffect","then","error","useFetchCact","map","profile_path","name","src","alt","width"],"sourceRoot":""}