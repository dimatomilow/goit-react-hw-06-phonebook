{"version":3,"file":"static/js/movie-detail.e99f49eb.chunk.js","mappings":"6KAQA,IAPiB,WAAO,IAAD,IACbA,GAAWC,EAAAA,EAAAA,MACjB,OACJ,SAAC,KAAD,CAAMC,GAAE,iBAAEF,QAAF,IAAEA,GAAF,UAAEA,EAAUG,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,uB,iMCFAC,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEP,SAAeC,IAAtB,4CAAO,OAAP,0BAAO,yGAEmBF,IAAAA,IAAA,qCAAwCC,IAF3D,cAEEE,EAFF,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAAmCC,GAAnC,4FAEmBP,IAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCN,EAAjC,oBAFnB,cAEEE,EAFF,yBAIEA,EAASC,MAJX,kEAOF,SAAeI,EAAtB,+CAAO,OAAP,0BAAO,WAA+BD,GAA/B,4FAEkBP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCN,EAAzC,oBAFlB,cAECE,EAFD,yBAIEA,EAASC,KAAKK,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAAkCH,GAAlC,4FAEkBP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCN,EAAzC,oBAFlB,cAECE,EAFD,yBAIEA,EAASC,KAAKC,SAJhB,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,0BAAO,WAAgCC,GAAhC,4FAEkBZ,IAAAA,IAAA,gCAAmCC,EAAnC,wCAA0EW,EAA1E,yBAFlB,cAECT,EAFD,yBAIEA,EAASC,KAAKC,SAJhB,oE,0IChCMQ,EAAMC,EAAAA,GAAAA,IAAH,+DAKHC,EAAUD,EAAAA,GAAAA,QAAH,4MAUPE,EAAMF,EAAAA,GAAAA,IAAH,0FAMHG,EAAcH,EAAAA,GAAAA,IAAH,iD,SCnBXI,GAAWJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,iK,mBCgCrB,EA7BqB,WAChB,IAAMM,ECJyB,WAEhC,OAA2BC,EAAAA,EAAAA,UAAS,MAApC,eAAOD,EAAP,KAAeE,EAAf,KACOC,GAAYC,EAAAA,EAAAA,MAAZD,SAMP,OAHAE,EAAAA,EAAAA,YAAU,YACNnB,EAAAA,EAAAA,IAAmBiB,GAAUG,KAAKJ,KACnC,CAACC,IACGH,EDLSO,GAEhB,OACI,iCACI,SAACC,EAAA,EAAD,IACCR,IAAW,UAACL,EAAD,WACPK,EAAOS,aAAe,SAACb,EAAD,CAAKc,IAAG,0CAAqCV,EAAOS,YAA5C,KAA4DE,IAAKX,EAAOY,SAAY,SAAChB,EAAD,CAAKc,IAAG,0CAAqCV,EAAOa,cAA5C,KAA8DF,IAAKX,EAAOY,SAErM,UAACnB,EAAD,YACA,wBAAKO,EAAOY,SACZ,sCACA,uBAAKZ,EAAOc,YACZ,mCACCd,EAAOe,OAAOC,KAAI,SAAAC,GAAI,OAAI,uBAAmBA,EAAKC,MAAhBD,EAAK9B,cAI5C,mBACA,UAACU,EAAD,YACK,qDACL,SAACC,EAAD,CAAUrB,GAAG,OAAb,mBACA,SAACqB,EAAD,CAAUrB,GAAG,UAAb,sBACH,SAAC,KAAD","sources":["Pages/Movie/component/BackLink/BackLink.js","Pages/Movie/servises/ServisTMDB.jsx","Pages/Movie/component/Styles/MovieDetailStyles.js","Pages/Movie/component/Styles/link.styles.js","Pages/Movie/vievs/MovieDetail.jsx","Pages/Movie/hooks/useFetchMovieDidails.js"],"sourcesContent":["import {useLocation,Link} from 'react-router-dom'\r\nconst BackLink = () => {\r\n    const location = useLocation();\r\n    return (\r\n<Link to={location?.state?.from ?? \"/\"}>Go back</Link>\r\n    );\r\n}\r\n\r\nexport default BackLink;","import axios from 'axios'\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst API_KEY = \"cdd38ed2e1ff6ec8c3ec0bbc75d0e5fe\";\r\n\r\n  export async function popularMovies  () {\r\n\r\n     const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n\r\n    return response.data.results;\r\n\r\n}\r\n  export async function fetchMoviesDetails (id) {\r\n\r\n     const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\r\n\r\n    return response.data;\r\n\r\n}\r\nexport async function fetchMoviesCast(id) {\r\n\r\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\r\n\r\n  return response.data.cast;\r\n}\r\n\r\nexport async function fetchMoviesReviews(id) {\r\n\r\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\r\n\r\n  return response.data.results;\r\n}\r\nexport async function fetchSearchMoive(quvery) {\r\n\r\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${quvery}&include_adult=false`);\r\n\r\n  return response.data.results;\r\n}","import styled from 'styled-components'\r\nexport const Div = styled.div`\r\nmargin-left: 30px;\r\nwidth: 500px;\r\n    `\r\n\r\nexport const Section = styled.section`\r\njustify-content: center;\r\ndisplay:flex\r\n\r\n\r\n//   display: grid;\r\n//     max-width: calc(100vw - 48px);\r\n//     grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n\r\n    `\r\nexport const Img = styled.img`\r\n    display: block;\r\n    max-width: 100%;\r\n    height: 500px;\r\n}\r\n`;\r\nexport const Information = styled.div`\r\n    text-align: center;\r\n`;","import styled from 'styled-components/'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const LinkViev = styled(Link)`\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  padding: 12px;\r\n  font-weight: 700;\r\n  color: #2a363b;\r\n  font-size: 18px;\r\n\r\n  }\r\n`;","import{useFetchMovieDidails} from '../hooks/useFetchMovieDidails'\r\nimport {Outlet } from 'react-router-dom'\r\nimport { Section, Div,Information,Img } from '../component/Styles/MovieDetailStyles'\r\nimport { LinkViev } from '../component/Styles/link.styles'\r\nimport BackLink from '../component/BackLink/BackLink'\r\n\r\n const MovieDetail = () => {\r\n     const movies = useFetchMovieDidails()\r\n\r\n    return (\r\n        <>\r\n            <BackLink/>\r\n            {movies && (<Section>\r\n                {movies.poster_path ? (<Img src={`https://image.tmdb.org/t/p/w500/${movies.poster_path} `} alt={movies.title} />):(<Img src={`https://image.tmdb.org/t/p/w500/${movies.backdrop_path} `} alt={movies.title} />)}\r\n                 {/* <Img src={`https://image.tmdb.org/t/p/w500/${movies.poster_path}`} alt={movies.title}  /> */}\r\n                <Div>\r\n                <h1>{movies.title}</h1>\r\n                <h2>overview</h2>\r\n                <p>{ movies.overview}</p>\r\n                <h2>Genrec</h2>\r\n                {movies.genres.map(genr => <p key={genr.id}>{ genr.name}</p>)}\r\n\r\n                </Div>\r\n            </Section>)}\r\n            <hr />\r\n            <Information>\r\n                 <h2>Additional information </h2>\r\n            <LinkViev to=\"cast\">Cast</LinkViev>\r\n            <LinkViev to=\"revievs\">Revievs</LinkViev>\r\n         <Outlet />\r\n       </Information>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MovieDetail","import {useEffect,useState} from 'react'\r\nimport {fetchMoviesDetails} from '../servises/ServisTMDB'\r\nimport {useParams} from 'react-router-dom'\r\nexport const useFetchMovieDidails = () => {\r\n\r\n    const [movies, setMovie] = useState(null);\r\n    const {moviesId} = useParams()\r\n\r\n\r\n    useEffect(() => {\r\n        fetchMoviesDetails(moviesId).then(setMovie)\r\n    }, [moviesId]);\r\n    return movies;\r\n};"],"names":["location","useLocation","to","state","from","axios","API_KEY","popularMovies","response","data","results","fetchMoviesDetails","id","fetchMoviesCast","cast","fetchMoviesReviews","fetchSearchMoive","quvery","Div","styled","Section","Img","Information","LinkViev","Link","movies","useState","setMovie","moviesId","useParams","useEffect","then","useFetchMovieDidails","BackLink","poster_path","src","alt","title","backdrop_path","overview","genres","map","genr","name"],"sourceRoot":""}