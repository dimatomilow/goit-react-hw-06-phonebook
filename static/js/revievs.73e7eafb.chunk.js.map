{"version":3,"file":"static/js/revievs.73e7eafb.chunk.js","mappings":"yTAEAA,IAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEP,SAAeC,IAAtB,4CAAO,OAAP,0BAAO,yGAEmBF,IAAAA,IAAA,qCAAwCC,IAF3D,cAEEE,EAFF,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAAmCC,GAAnC,4FAEmBP,IAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCN,EAAjC,oBAFnB,cAEEE,EAFF,yBAIEA,EAASC,MAJX,kEAOF,SAAeI,EAAtB,+CAAO,OAAP,0BAAO,WAA+BD,GAA/B,4FAEkBP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCN,EAAzC,oBAFlB,cAECE,EAFD,yBAIEA,EAASC,KAAKK,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,0BAAO,WAAkCH,GAAlC,4FAEkBP,IAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCN,EAAzC,oBAFlB,cAECE,EAFD,yBAIEA,EAASC,KAAKC,SAJhB,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,0BAAO,WAAgCC,GAAhC,4FAEkBZ,IAAAA,IAAA,gCAAmCC,EAAnC,wCAA0EW,EAA1E,yBAFlB,cAECT,EAFD,yBAIEA,EAASC,KAAKC,SAJhB,oE,sHCrBP,EAViB,WACd,IAAMQ,ECEsB,WAC1B,OAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAQD,EAAR,KAAiBE,EAAjB,KACOC,GAAaC,EAAAA,EAAAA,MAAbD,SAKR,OAJJE,QAAQC,IAAIN,IACZO,EAAAA,EAAAA,YAAU,YACFV,EAAAA,EAAAA,IAAmBM,GAAUK,KAAKN,KACvC,CAACC,IACOH,EDTMS,GAEb,OACQ,wBACKT,GAAWA,EAAQU,KAAI,gBAAEC,EAAF,EAAEA,OAAOC,EAAT,EAASA,QAAQlB,EAAjB,EAAiBA,GAAjB,OAAyB,2BAC7C,wBAAKiB,KACL,uBAAIC,MAFkDlB","sources":["Pages/Movie/servises/ServisTMDB.jsx","Pages/Movie/vievs/Revievs.jsx","Pages/Movie/hooks/useFetchReviews.js"],"sourcesContent":["import axios from 'axios'\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\r\n\r\nconst API_KEY = \"cdd38ed2e1ff6ec8c3ec0bbc75d0e5fe\";\r\n\r\n  export async function popularMovies  () {\r\n\r\n     const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\r\n\r\n    return response.data.results;\r\n\r\n}\r\n  export async function fetchMoviesDetails (id) {\r\n\r\n     const response = await axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\r\n\r\n    return response.data;\r\n\r\n}\r\nexport async function fetchMoviesCast(id) {\r\n\r\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\r\n\r\n  return response.data.cast;\r\n}\r\n\r\nexport async function fetchMoviesReviews(id) {\r\n\r\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US`);\r\n\r\n  return response.data.results;\r\n}\r\nexport async function fetchSearchMoive(quvery) {\r\n\r\n  const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${quvery}&include_adult=false`);\r\n\r\n  return response.data.results;\r\n}","import {useFetchReviews } from '../hooks/useFetchReviews'\r\n\r\n const Reviews = () => {\r\n   const reviews=useFetchReviews()\r\n\r\n    return (\r\n            <ul>\r\n                {reviews && reviews.map(({author,content,id}) => <li key={id}>\r\n                    <h2>{author}</h2>\r\n                    <p>{content}</p></li>)}\r\n</ul>\r\n    );}\r\nexport default Reviews","import {useParams} from 'react-router'\r\nimport {fetchMoviesReviews} from '../servises/ServisTMDB'\r\nimport {useState,useEffect} from 'react'\r\n\r\n\r\nexport const useFetchReviews = () => {\r\n     const  [reviews, setReviews ] = useState(null);\r\n    const { moviesId } = useParams();\r\nconsole.log(reviews)\r\nuseEffect(() => {\r\n        fetchMoviesReviews(moviesId).then(setReviews)\r\n}, [moviesId]);\r\n    return reviews;\r\n}"],"names":["axios","API_KEY","popularMovies","response","data","results","fetchMoviesDetails","id","fetchMoviesCast","cast","fetchMoviesReviews","fetchSearchMoive","quvery","reviews","useState","setReviews","moviesId","useParams","console","log","useEffect","then","useFetchReviews","map","author","content"],"sourceRoot":""}